3조 발표자 ~~~ 입니다.
발표 시작하도록 하겠습니다.

저희 프로젝트는 강휘진, 곽범수, 백재원, 임진수, 진재혁 이렇게 5명이서 진행했습니다.
저희는 '얼굴 인식 도어락'이라는 주제로 프로젝트 방향을 잡았습니다.
일반 키패드 도어락 또는 리모콘 도어락에 대해 일반 사용자가 아닌 몸이 불편하신 분들이 사용하시기에는 불편함이 있을것이라 생각했습니다.
특히 손을 못쓰시는 분들은 키패드 도어락에 대해 제한적인 부분이 많고,
리모콘 도어락에 대해서 리모콘을 잃어버렸을 때에 대한 금전적&정신적 스트레스가 있을 수 있고, 
몸이 불편하신 분들이 항상 리모콘을 손에 들고 다니시는것도 아닐뿐더러 가방에서 꺼내는거 자체가 불편하실 수 있습니다.
그래서 저희는 화면에 적어놓은 것과 같이 라즈베리파이와 카메라 센서, 지그비, 도어락을 이용해 
기존의 도어락을 보완 및 개선하려는 목적을 가지고 프로젝트를 진행했습니다.

그럼 이제 모듈과 동작 방식에 대해 설명드리겠습니다.
저희가 사용한 모듈에는 라즈베리파이 2개, 사람 인식을 위한 카메라센서, 
받은값을 전기신호로 바꿔주는 릴레이 모듈, 무선 송수신을 위한 지그비 2개, 도어락이 있습니다.
다음은 동작 방식입니다.
라즈베리파이에 카메라 센서를 달아 특정 사람의 얼굴을 보여줍니다.
카메라가 가지고있는 사진 속 사람의 얼굴과 특정 사람의 얼굴을 비교해
설정해놓은 인식율을 넘게되면 지그비로 통신하여 도어락이 열리게 합니다.
그와 동시에 그 사람에 대한 사진을 찍게되고 그 사진을 '도어락 open'이라는 메세지와 함께 텔레그램에 전송하게 됩니다.
이 동작 부분에 있어 저희는 openCV를 사용해
사진 100장을 촬영, 저장시켜 학습을 시킨후에 특정 사람의 얼굴을 인식하여 동일 인물인지 아닌지 판단 후 도어락을 열고 닫음을 구현했습니다.

여기서 openCV란 open source computer vision의 약자로 다양한 영상/동영상 처리에 사용할 수 있는 오픈소스 라이브러리로
2,500개 이상의 최적화 된 최첨단 컴퓨터 비전, 머신러닝 그리고 고전적인 알고리즘이 포함돼 있고 
최신 기술에 속하는 자율주행, 딥러닝에도 사용중에 있으며 주로 컴퓨터의 눈을 담당하는 기술입니다.
계산 효율성과 실시간 응용 프로그램에 중점을 두고 설계됐기 때문에 실시간 얼굴 인식을 해야하는 저희 코드에 사용하기 적합하다 판단되어 사용했습니다.
커밋한 폴더로 들어가서 코드의 역할에 대해 간략히 설명드리겠습니다.
ㄴ> face폴더로 들어가기

face_part1.py의 역할은 학습할 얼굴을 촬영하고 흑백으로 바꿔 머신 러닝기반의 오브젝트 검출 알고리즘인 haar cascade(하르 케스케이드)를 사용해서 특징들을 추출한 후 값을 저장합니다.
저희는 사진100장을 기준으로 진행했지만 기준을 높이거나 낮출 수 있습니다.
그다음 face_part2.py의 역할은 part1에서 촬영한 사진 100장을 학습시키는 단계입니다.
마지막 face_part3.py의 역할은 실시간으로 인식되는 얼굴을 전달하고 미리 학습한 사진과 인식되는 얼굴을 비교해 유사도를 측정합니다.
저희는 유사도를 75%로 정했고 이 수치를 넘으면 문이 열리게 구현했습니다.

이를 토대로 만든 얼굴 인식 도어락 동작 영상을 보시고 난 후에 설명 이어서가겠습니다.

영상에서 보시다시피 저희는 백재원 학생의 얼굴사진을 저장, 학습시켰습니다. 그 후에 백재원 학생의 얼굴만 인식율을 넘었기 때문에 도어락이 열리고
영상에는 나오지 않았지만 나머지 4명 얼굴을 카메라에 비췄을때 인식율이 충족하지 못했기 때문에 도어락이 열리지 않았음을 확인했습니다.

이제 저희가 보여드려야 할 부분이 지그비로 송수신을 하며 도어락이 열리고 닫히는 부분을 보여드려야 하는데 이부분은 아직 구현하지 못했습니다.
저희가 받은 지그비는 k-mote인데 k-mote 대해 자료도 많이 없었고 오픈소스도 없었습니다.
그러다가 12월 11일 k-mote 판매처인 TinyOS mall(아이엔테크->언급안해도됨) 에 연락을 해서 TinyOS 개발 환경과 기본 소스 코드들을 12월14일 월요일에 받게됐습니다.
2일간 최대한 노력해봤지만 시간이 살짝 부족했던 관계로 지그비를 뺀 일방향 통신의 얼굴인식 도어락을 구현했습니다.

저희가 이 프로젝트를 진행하면서 부족한 점을 생각해봤습니다.
첫번째로는 저희가 업체가 아닌 학생으로써 할수있는 부분은 다했지만 도어락과 점퍼케이블을 연결하는데 있어서 절연테이프로 연결하다 보니 
언제든지 쇼트가 될 가능성이 있었습니다. 이 부분은 저희가 장비가 없어서 못한거지 납땜 장비를 이용해 해결 할 수 있을 것 같습니다.
두번째는 아까도 말씀드렸다시피 1명의 사용자만 등록해놨습니다. 다른 사용자를 등록해야 할 경우 faces/ 의 밑에 개별 디렉토리를 만들어 등록하면 해결되는 부분입니다.
세번째로는 카메라 시스템상 실시간으로 얼굴을 인식한다기보다 사진 한장씩 읽어 얼굴을 검출하게 됩니다. 이렇기에 읽어드리는 시간이 발생해 대략 2초의 딜레이가 발생하는데
이를 카메라 view를 통해 실시간으로 보게된다면 딜레이가 발생해 멈춤 현상처럼 오인할 수도 있다는 단점이 있습니다.
마지막으로는 얼굴 인식 도어락인 만큼, 작동이 되면 검출을 하고 문이 열리는데 이때 문이 열리고도 얼굴을 계속 검출하여 유사치가 맞을 경우
도어락이 잠긴후, 다시 열리게 된다는 단점이 발생하는걸 확인했습니다. 그 이유는 검출한 얼굴은 종료가 되지만 프로그램은 종료되지 않아 다시 얼굴을 찾게 되기 때문입니다.
이 부분은 AP3216이라는 라즈베리파이의 근접센서를 활용하여 움직임을 확인한후 카메라를 on/off 하게끔 구현을 하거나 버튼을 이용해 누르면 실행되고 누르지 않았을경우 실행이 되지않게끔
구현하면 해결할수 있을것이라 생각합니다.

이상 저희 얼굴 인식 도어락 프로젝트 발표 마치며 지금부터 물어보시는 부분에 대해 답변드리도록하겠습니다.
